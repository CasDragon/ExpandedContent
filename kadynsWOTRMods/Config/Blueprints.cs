using HarmonyLib;
using Kingmaker.Blueprints;
using Kingmaker.Blueprints.JsonSystem;
using Kingmaker.Utility;
using ModKit;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;

namespace kadynsWOTRMods.Config {
    public class Blueprints : IUpdatableSettings {
        [JsonProperty]
        private bool OverrideIds = false;
        [JsonProperty]
        private readonly SortedDictionary<string, Guid> NewBlueprints = new SortedDictionary<string, Guid>();
        [JsonProperty]
        private readonly SortedDictionary<string, Guid> AutoGenerated = new SortedDictionary<string, Guid>();
        [JsonProperty]
        private readonly SortedDictionary<string, Guid> UnusedGUIDs = new SortedDictionary<string, Guid>();
        private readonly SortedDictionary<string, Guid> UsedGUIDs = new SortedDictionary<string, Guid>();

        public void OverrideSettings(IUpdatableSettings userSettings) {
            if (userSettings is null) {
                throw new ArgumentNullException(nameof(userSettings));
            }

            var loadedSettings = userSettings as Blueprints;
            if (loadedSettings == null) { return; }
            if (loadedSettings.OverrideIds) {
                OverrideIds = loadedSettings.OverrideIds;
                loadedSettings.NewBlueprints.ForEach(entry => {
                    if (NewBlueprints.ContainsKey(entry.Key)) {
                        NewBlueprints[entry.Key] = entry.Value;
                    }
                });
            }
            loadedSettings.AutoGenerated.ForEach(entry => {
                AutoGenerated[entry.Key] = entry.Value;
            });
        }
        public BlueprintGuid GetGUID(string name) {

            if (!NewBlueprints.TryGetValue(name, out Guid Id)) {

            }
            UsedGUIDs[name] = Id;
            return new BlueprintGuid(Id);
        }

        void IUpdatableSettings.OverrideSettings(IUpdatableSettings userSettings) {
            throw new NotImplementedException();
        }

        void IUpdatableSettings.Init() {
            throw new NotImplementedException();
        }
    }
}

